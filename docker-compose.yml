version: '3.0'
services:
  composer:
    env_file: .env
    user: "$_UID:$_GID"
    network_mode: "host"
    image: "composer:$COMPOSER_VERSION"
    working_dir: "$APP_SOURCE_ROOT"
    environment:
      COMPOSER_HOME: "$COMPOSER_HOME"
      COMPOSER_CACHE_DIR: "$COMPOSER_CACHE_DIR"
    volumes:
      - "$COMPOSER_HOME:$COMPOSER_HOME"
      - "$COMPOSER_CACHE_DIR:$COMPOSER_CACHE_DIR"
      - "./composer.json:$APP_SOURCE_ROOT/composer.json"
      - "./vendor:$APP_SOURCE_ROOT/vendor"
  mysql:
    image: "mysql:$MYSQL_VERSION"
    env_file: .env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_USER}"]
      interval: 3s
      retries: 10
      timeout: 1s
    environment:
      MYSQL_DATABASE: "$MYSQL_USER"
      MYSQL_USER: "$MYSQL_USER"
      MYSQL_PASSWORD: "$MYSQL_USER"
      MYSQL_ROOT_PASSWORD: "$MYSQL_ROOT_PASSWORD"
    ports:
      - "3307:3307"
  migrations:
    depends_on:
      - mysql
    build:
      context: .docker/migrations
      args:
        PHP_VERSION: "$PHP_VERSION"
    env_file: .env
    user: "$_UID:$_GID"
    working_dir: "$APP_SOURCE_ROOT"
    volumes:
      - "./:$APP_SOURCE_ROOT"
  php-fpm:
    build:
      context: .docker/php-fpm
      args:
        PHP_VERSION: "$PHP_VERSION"
    env_file: .env
    user: "$_UID:$_GID"
    depends_on:
      - mysql
    ports:
      - "9000:9000"
    links:
      - mysql
    volumes:
      - "./:$APP_SOURCE_ROOT"
  nginx:
    image: "nginx:$NGINX_VERSION-alpine"
    env_file: .env
    ports:
      - "80:80"
    volumes:
      - "./:$APP_SOURCE_ROOT"
      - "./docker/nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./docker/nginx/etc/nginx/sites-enabled:/etc/nginx/sites-enabled"
    depends_on:
      - "php-fpm"